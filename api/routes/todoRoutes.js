/**
 * ### TO-DO Router
 *
 * @endpoint {base_url}/api/users/:userId
 */
const todoRouter = require("express").Router();
const todoController = require("../controllers/todoControllers");
const { loggedInVerify, paramAccountOwnerVerify } = require("../middleware/verification");

////////////////////////////////////////////////////////////////////////////////////////////////////
////////                               ! TODO ROUTES                                    ////////////
////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////
////////                             ? READ                                   ////////////
//////////////////////////////////////////////////////////////////////////////////////////

todoRouter
	.route("/:userId/todos")
	.get(loggedInVerify, paramAccountOwnerVerify, todoController.get_todos_get);

todoRouter
	.route("/:userId/detail/:todoId")
	.get(loggedInVerify, paramAccountOwnerVerify, todoController.get_todo_detail_get);

//////////////////////////////////////////////////////////////////////////////////////////
////////                             ? CREATE                                 ////////////
//////////////////////////////////////////////////////////////////////////////////////////

todoRouter
	.route("/:userId/create_todo")
	.post(loggedInVerify, paramAccountOwnerVerify, todoController.create_todo_post);

//////////////////////////////////////////////////////////////////////////////////////////
////////                             ? UPDATE                                 ////////////
//////////////////////////////////////////////////////////////////////////////////////////

todoRouter
	.route("/:userId/update_todo/:todoId")
	.patch(loggedInVerify, paramAccountOwnerVerify, todoController.update_todo_patch);

//////////////////////////////////////////////////////////////////////////////////////////
////////                          ? DELETE                                    ////////////
//////////////////////////////////////////////////////////////////////////////////////////

todoRouter
	.route("/:userId/delete_todo/:todoId")
	.delete(loggedInVerify, paramAccountOwnerVerify, todoController.delete_todo_delete);

module.exports = todoRouter;
